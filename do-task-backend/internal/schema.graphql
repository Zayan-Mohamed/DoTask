schema {
  query: Query
  mutation: Mutation
}

type Query {
  tasks: [Task!]!
  task(id: ID!): Task
  categories: [Category!]!
  category(id: ID!): Category
}

type Mutation {
  createTask(input: CreateTaskInput!): Task!
  updateTask(id: ID!, input: UpdateTaskInput!): Task!
  deleteTask(id: ID!): Boolean!
  updateTaskStatus(id: ID!, status: TaskStatus!): Task!
  createCategory(name: String!): Category!
  updateCategory(id: ID!, name: String!): Category!
  deleteCategory(id: ID!): Boolean!
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  COMPLETED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

type Task {
  id: ID!
  title: String!
  description: String
  status: TaskStatus!
  priority: TaskPriority!
  dueDate: String!
  createdAt: String!
  updatedAt: String!
  category: Category!
  tags: [String!]!
}

type Category {
  id: ID!
  name: String!
  tasks: [Task!]!
}

input CreateTaskInput {
  title: String!
  description: String
  status: TaskStatus!
  priority: TaskPriority!
  dueDate: String!
  categoryId: ID!
  tags: [String!]
}

input UpdateTaskInput {
  title: String
  description: String
  status: TaskStatus
  priority: TaskPriority
  dueDate: String
  categoryId: ID
  tags: [String!]
}
