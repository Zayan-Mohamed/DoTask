# Multi-stage build for SvelteKit frontend (AWS Production)
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
RUN npm ci

# Copy source code
COPY . .

# Create production environment file with build args
ARG PUBLIC_GRAPHQL_ENDPOINT=http://localhost/api/query
ARG PUBLIC_WS_ENDPOINT=ws://localhost/api/query
ARG PUBLIC_APP_TITLE=DoTask
ARG PUBLIC_APP_VERSION=1.0.0

RUN echo "PUBLIC_GRAPHQL_ENDPOINT=${PUBLIC_GRAPHQL_ENDPOINT}" > .env && \
    echo "PUBLIC_WS_ENDPOINT=${PUBLIC_WS_ENDPOINT}" >> .env && \
    echo "PUBLIC_APP_TITLE=${PUBLIC_APP_TITLE}" >> .env && \
    echo "PUBLIC_APP_VERSION=${PUBLIC_APP_VERSION}" >> .env

# Build the application
RUN npm run build

# Production stage with NGINX
FROM nginx:alpine

# Copy custom nginx configuration (use AWS optimized version)
COPY nginx.aws.conf /etc/nginx/nginx.conf

# Create cache directory
RUN mkdir -p /var/cache/nginx/api && \
    chown -R nginx:nginx /var/cache/nginx

# Copy built application
COPY --from=builder /app/build /usr/share/nginx/html

# Create static directory and copy if exists
RUN mkdir -p /usr/share/nginx/html/static

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
