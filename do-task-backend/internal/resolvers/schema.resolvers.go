package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"time"

	"github.com/Zayan-Mohamed/do-task-backend/internal/models"
)

// DueDate returns a string representation of the task's due date
func (r *taskResolver) DueDate(ctx context.Context, obj *models.Task) (string, error) {
	return obj.DueDate.Format(time.RFC3339), nil
}

// CreatedAt returns a string representation of the task's creation time
func (r *taskResolver) CreatedAt(ctx context.Context, obj *models.Task) (string, error) {
	return obj.CreatedAt.Format(time.RFC3339), nil
}

// UpdatedAt returns a string representation of the task's update time
func (r *taskResolver) UpdatedAt(ctx context.Context, obj *models.Task) (string, error) {
	return obj.UpdatedAt.Format(time.RFC3339), nil
}


type categoryResolver struct{ *Resolver }
type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type taskResolver struct{ *Resolver }
